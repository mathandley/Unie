
----------------------------------------------------------------------------------------------------
-- Commands: --
----------------------------------------------------------------------------------------------------
import-lib ./libs/reverse
import-lib eval ./libs/reverse_eval_cec2
trans $ V_Rep[✔V_Revbody[f]] $ IMP $ V_G[✔V_Rep[f]] $
apply-def 'Rep
apply-def 'Revbody
right
right
tick-eval $ [-] xs ++ ys $
right
left
right
beta
up
up
case-eval $ [-] ++ ys $
right
rhs
append-ident
up
next
rhs
append-assoc-lr-i
right
eval-i
up
up
up
up
case-eval $ ✔[-] $
right
rhs
tick-elim
up
next
rhs
right
desugar app
right
unbeta $ (λas.λbs.(f as) ++ bs) ys0 a $
up
up
untick-eval $ let a = (y : ys) in [-] ys0 a $
right
left
left
right
rename-binder as xs
right
rename-binder bs ys
up
unapply-def 'Rep
top
define $ V_G[✔V_Rep[f]] $
exit-script


----------------------------------------------------------------------------------------------------
-- Generated by UNIE on: 19-10-2017 ----------------------------------------------------------------
