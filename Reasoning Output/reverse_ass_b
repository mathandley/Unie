
This is the proof of worker/wrapper improvement assumption B for 
the reverse example in Worker/Wrapper/Makes it/Faster

UNIE script found in: /Improvement Scripts/reverse_ass_b

----------------------------------------------------------------------------------------------------
Transformation info: -----
----------------------------------------------------------------------------------------------------
-- Goal: -----------------
V_Revbody[f]
-- Global relation: ------
⪅⪆
-- Steps: ---------------
28
-- Navigation steps: ----
16
----------------------------------------------------------------------------------------------------
Transformation history: --
----------------------------------------------------------------------------------------------------
    { trans $ V_Abs[V_Rep[V_Revbody[f]]] $ WCE $ V_Revbody[f] $ }

V_Abs[V_Rep[V_Revbody[f]]]

  ≡ { apply-def 'Abs }

λxs.V_Rep[V_Revbody[f]] xs []

  ≡ { apply-def 'Rep }

λxs.(λxs.λys.(V_Revbody[f] xs) ++ ys) xs []

  ≡ { right }

λxs.(λxs.λys.(V_Revbody[f] xs) ++ ys) xs []

  ≡ { left }

λxs.(λxs.λys.(V_Revbody[f] xs) ++ ys) xs []

 ≲≳ { beta }

λxs.(λys.(V_Revbody[f] xs) ++ ys) []

  ≡ { up }

λxs.(λys.(V_Revbody[f] xs) ++ ys) []

 ≲≳ { beta }

λxs.(V_Revbody[f] xs) ++ []

  ≡ { top }

λxs.(V_Revbody[f] xs) ++ []

  ≡ { apply-def 'Revbody }

λxs.((λxs.case xs of
           []       ➞ []
           (y : ys) ➞ (f ys) ++ [y])
     xs) ++ []

  ≡ { right }

λxs.((λxs.case xs of
           []       ➞ []
           (y : ys) ➞ (f ys) ++ [y])
     xs) ++ []

  ≡ { left }

λxs.((λxs.case xs of
           []       ➞ []
           (y : ys) ➞ (f ys) ++ [y])
     xs) ++ []

  ≡ { right }

λxs.((λxs.case xs of
           []       ➞ []
           (y : ys) ➞ (f ys) ++ [y])
     xs) ++ []

 ≲≳ { beta }

λxs.(case xs of
      []       ➞ []
      (y : ys) ➞ (f ys) ++ [y]) ++ []

  ≡ { up }

λxs.(case xs of
      []       ➞ []
      (y : ys) ➞ (f ys) ++ [y]) ++ []

  ≡ { up }

λxs.(case xs of
      []       ➞ []
      (y : ys) ➞ (f ys) ++ [y]) ++ []

 ≲≳ { case-eval $ [-] ++ [] $ }

λxs.case xs of
     []       ➞ [] ++ []
     (y : ys) ➞ ((f ys) ++ [y]) ++ []

  ≡ { right }

λxs.case xs of
     []       ➞ [] ++ []
     (y : ys) ➞ ((f ys) ++ [y]) ++ []

  ≡ { rhs }

λxs.case xs of
     []       ➞ [] ++ []
     (y : ys) ➞ ((f ys) ++ [y]) ++ []

 ⪅⪆ { eval-wce }

λxs.case xs of
     []       ➞ []
     (y : ys) ➞ ((f ys) ++ [y]) ++ []

  ≡ { up }

λxs.case xs of
     []       ➞ []
     (y : ys) ➞ ((f ys) ++ [y]) ++ []

  ≡ { next }

λxs.case xs of
     []       ➞ []
     (y : ys) ➞ ((f ys) ++ [y]) ++ []

  ≡ { rhs }

λxs.case xs of
     []       ➞ []
     (y : ys) ➞ ((f ys) ++ [y]) ++ []

 ⪅⪆ { append-assoc-lr-wce }

λxs.case xs of
     []       ➞ []
     (y : ys) ➞ (f ys) ++ ([y] ++ [])

  ≡ { right }

λxs.case xs of
     []       ➞ []
     (y : ys) ➞ (f ys) ++ ([y] ++ [])

 ⪅⪆ { eval-wce }

λxs.case xs of
     []       ➞ []
     (y : ys) ➞ (f ys) ++ [y]

  ≡ { top }

λxs.case xs of
     []       ➞ []
     (y : ys) ➞ (f ys) ++ [y]

  ≡ { unapply-def 'Revbody }

V_Revbody[f]



----------------------------------------------------------------------------------------------------
-- Generated by UNIE on: 24-10-2017 ----------------------------------------------------------------
